<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!--     무조건 DAO가 위치한 패키지로 namespace 해야하는가? -->
<mapper namespace="kr.or.gaw.dao.BoardDAO">

	<select id="listBoard" resultType="kr.or.gaw.dto.BoardDTO">
		select * from board
	</select>
	
	<select id="BoardOne" resultType="kr.or.gaw.dto.BoardDTO" parameterType="String">
		select * from board where board_id = #{board_id}
	</select>
	
	<select id="boardDuplicate" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM board WHERE board_id = #{board_id}
	</select>
	
	<select id="maxBoardID" parameterType="String" resultType="int">
		SELECT MAX(TO_NUMBER(SUBSTR(board_id, 2)))
		FROM board
	</select>
	
	<insert id="insertBoard" parameterType="kr.or.gaw.dto.BoardDTO">
		INSERT INTO board (board_id, description, board_name, created_by, created_at)
		VALUES (#{board_id}, #{description}, #{board_name}, #{created_by}, #{created_at})
	</insert>
	
	<update id="updateBoard" parameterType="kr.or.gaw.dto.BoardDTO">
		update board set board_name= #{board_name}, description = #{description} where board_id= #{board_id}
	</update>
	
	<delete id="deleteBoard" parameterType="BoardDTO">
		delete from board where board_id=#{board_id}
	</delete>
	
	<!-- ///////////////////////////게시글////////////////////////////// -->
	
	<select id="listPosts" resultType="kr.or.gaw.dto.PostsDTO" parameterType="PostsDTO">
    SELECT *
	FROM (
	    SELECT rownum rnum, p.post_id, p.board_id, b.board_name, p.title, p.content, p.author_id, e.name AS author_name, 
	           p.created_at, p.updated_at, p.pinned, p.view_cnt
	    FROM (
	        SELECT post_id, board_id, title, content, author_id, created_at, updated_at, pinned, view_cnt
	        FROM posts
	        ORDER BY created_at DESC
	    ) p
	    LEFT JOIN board b ON p.board_id = b.board_id  
	    LEFT JOIN emp e ON p.author_id = e.user_id  
	)
	WHERE rnum &gt;= #{page} AND rnum &lt;= #{countPerPage}

	</select>
	
	<select id="selectPostById" resultType="PostsDTO" parameterType="PostsDTO">
		SELECT 
        p.post_id,
        p.board_id,
        b.board_name, -- board 테이블에서 board_name 가져오기
        p.title,
        p.content,
        p.author_id,
        e.name AS author_name, -- emp 테이블에서 name 가져오기
        p.created_at,
        p.updated_at,
        p.pinned,
        p.view_cnt
    FROM posts p
    LEFT JOIN board b ON p.board_id = b.board_id -- board_name을 가져오기 위해 JOIN
    LEFT JOIN emp e ON p.author_id = e.user_id -- author_id에 해당하는 이름을 가져오기 위해 JOIN
    WHERE p.post_id = #{postId}
	</select>

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>
